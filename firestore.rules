rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // Orders
    match /orders/{orderId} {
      allow read: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow delete: if isAdmin();
    }

    // Subscriptions
    match /subscriptions/{subscriptionId} {
      allow read: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow delete: if isAdmin();
    }

    // Public collections
    match /menu/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /categories/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /restaurants/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 